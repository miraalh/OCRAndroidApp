package com.example.mhaq.ocrdemo;
import android.graphics.BitmapFactory;
import android.speech.tts.TextToSpeech;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.SparseArray;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.util.Log;
import com.google.android.gms.vision.text.TextBlock;
import com.google.android.gms.vision.text.TextRecognizer;
import com.google.android.gms.vision.Frame;
import android.widget.Toast;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;

import java.util.Locale;

public class MainActivity extends AppCompatActivity {

    private TextView labelTextView;
    private ImageView imageView;
    private Button detectButton;
    private Button speakButton;
    private TextView detectedTextView;
    private TextToSpeech textToSpeech;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        //get references to views
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        labelTextView = (TextView) findViewById(R.id.labelTextView);
        imageView = (ImageView) findViewById(R.id.imageView);
        imageView.setImageResource(R.drawable.word);
        detectedTextView = (TextView) findViewById(R.id.detectedTextView);
        detectButton = (Button) findViewById(R.id.detectTextButton);
        speakButton = (Button) findViewById(R.id.speakButton);

        //when user presses detect, the text should be recognized and displayed
        detectButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                displayText();
            }
        });

        //this object is used to read the text aloud
        textToSpeech = new TextToSpeech(this, new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int status) {
                if(status != TextToSpeech.ERROR) {
                    textToSpeech.setLanguage(Locale.US);
                }
            }
        });

        //on click, this button will make a toast that says 'Reading' and will tell the TextToSpeech object to start
        // speaking whatever text has been displayed
        speakButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String toSpeak = detectedTextView.getText().toString();
                Toast.makeText(getApplicationContext(), Constants.READING,Toast.LENGTH_LONG).show();
                textToSpeech.speak(toSpeak, TextToSpeech.QUEUE_FLUSH, null);
            }
        });

    }

    public void onPause(){
        if(textToSpeech !=null){
            textToSpeech.stop();
            textToSpeech.shutdown();
        }
        super.onPause();
    }

    /**
     * Creates a Text Recognizer and converts the image file to a bitmap, then recognizes the text and displays it on
     * the screen
     */
    protected void displayText(){

        // Create the TextRecognizer
        TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();

        // Check if the TextRecognizer is operational.
        if (!textRecognizer.isOperational()) {
            Log.d("TEXTRECOGNIZER", "Detector dependencies are not yet available.");

            // Check for low storage and if there is low storage then print an error message
            IntentFilter lowstorageFilter = new IntentFilter(Intent.ACTION_DEVICE_STORAGE_LOW);
            boolean hasLowStorage = registerReceiver(null, lowstorageFilter) != null;

            if (hasLowStorage) {
                Toast.makeText(this, R.string.low_storage_error, Toast.LENGTH_LONG).show();
                Log.d("TEXTRECOGNIZER", getString(R.string.low_storage_error));
            }
        }

        //converts the image file to a bitmap and detects whatever text is present
        Bitmap imageBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.word);
        Frame.Builder frame = new Frame.Builder();
        frame.setBitmap(imageBitmap);
        SparseArray<TextBlock> detectedTextArray = textRecognizer.detect(frame.build());
        String detectedText = "";
        for (int keyIndex = 0; keyIndex < detectedTextArray.size(); keyIndex++){
            detectedText+= detectedTextArray.valueAt(keyIndex).getValue();
        }
        detectedTextView.setText(Constants.DETECTED_MESG + detectedText);

    }

}
